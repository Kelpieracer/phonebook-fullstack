{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Backend",
            "runtimeExecutable": "npm",
            "runtimeArgs": [
                "run-script",
                "watch:debug"
            ],
            "port": 5858,
            "skipFiles": [
                "<node_internals>/**"
            ]
        },

        {
            "type": "chrome",
            "request": "launch",
            "name": "Launch Frontend",
            "url": "http://localhost:3000",
            "webRoot": "${workspaceFolder}/client"
        },
        {
            "type": "chrome",
            "request": "attach",
            "name": "Attach to Chrome against localhost",
            "url": "http://localhost",
            "port": 3000,
            "webRoot": "${workspaceFolder}/client"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Client Jest All",
            "program": "${workspaceFolder}\\client\\node_modules\\jest\\bin\\jest.js",
            "cwd": "${workspaceFolder}/client",
            "args": [
                "test",
                "--testMatch=\"**/+(*.)+(spec|test).+(ts|js)?(x)\"",
                "--runInBand"
            ],
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "disableOptimisticBPs": true,
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Client Jest Current File",
            "program": "${workspaceRoot}\\client\\node_modules\\jest\\bin\\jest.js",
            //"cwd": "${workspaceFolder}",
            "args": [
                "test",
                "--testMatch=\"**/+(*.)+(spec|test).+(ts|js)?(x)\"",
                "--testPathPattern=${fileBasenameNoExtension}",
                "--runInBand",
            ],
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "disableOptimisticBPs": true,
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Client Jest Tests",
            "program": "${workspaceRoot}\\client\\node_modules\\jest\\bin\\jest.js",
            "args": [
                "-i"
            ],
            "preLaunchTask": "build",
            "internalConsoleOptions": "openOnSessionStart",
            "outFiles": [
                "${workspaceRoot}/dist/**/*"
            ],
            "envFile": "${workspaceRoot}/client/.env"
        },
        {
            "name": "Client Debug Jest", // name to show in Debug config picker
            "type": "node",
            "request": "launch",
            "address": "localhost",
            // everything above here is standard node debug
            // some people specify "port": 5858, but that didn't work; Code seems to pick the right one now
            "sourceMaps": true, // if you are using Babel or TS, make this true
            // you can add another arg to pattern-match limit the tests, just as when normally running jest
            "runtimeArgs": [
                "${workspaceRoot}/client/node_modules/jest/bin/jest.js",
                "--runInBand", // https://facebook.github.io/jest/docs/en/cli.html#runinband - don't parallelize
                "--no-cache" // https://facebook.github.io/jest/docs/en/cli.html#cache - just avoid caching issues
            ],
            "env": {
                "NODE_ENV": "test" // make sure it matches your target; useful for babel config
            }
        }
    ]
}

// {
//     // Use IntelliSense to learn about possible attributes.
//     // Hover to view descriptions of existing attributes.
//     // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
//     "version": "0.2.0",
//     "configurations": [
//         {
//             // Use: "npm run watch:debug" first, then attach debugger, if you want program to stop in the beginning
//             // Use: "npm run watch:debug2" first, then attach debugger, if you want program to run
//             // Result: autosave and debugging work! Some strange issues with break-points
//             "name": "Attach: npm run watch:debug",
//             "type": "node",
//             "request": "attach",
//             "restart": true,
//             "port": 5858,
//             "outFiles": [
//                 "${workspaceFolder}\\out"
//             ],
//             "sourceMaps": true
//         },
//     ]
// }